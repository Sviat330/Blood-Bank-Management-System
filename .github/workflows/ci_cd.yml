name: "Continuous Integration/Deployment"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    name: 'Run unit tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build docker container with compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ./docker-compose.yml
      - name: Run php unit test  
        run: docker run fpm sh -c "/var/www/html/test/phpunit.xml"
  
  lint:
    name: 'Run lint test'
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          coverage: none
          tools: phpcs
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          php_codesniffer: true
          # Optional: Ignore warnings
          php_codesniffer_args: "-n"      

  
  deploy_staging:
    environment: staging
    name: 'Deploy to staging'
    runs-on: ubuntu-latest
    needs: [ test,lint ]
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ vars.AWS_STACK_REGION }}
    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Install aws-cli
        uses: unfor19/install-aws-cli-action@v1
      - name: Login to AWS and set all needed variables
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY
          aws configure set aws_secret_access_key $AWS_SECRET_KEY
          aws configure set default.region $AWS_REGION
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo $ACCOUNT_ID >>.env
          echo $AWS_REGION >>.env
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" > .env
          IMAGE_TAG=${GITHUB_SHA_SHORT:=latest}
          echo $IMAGE_TAG

      - name: Logging in to Amazon ECR
        run: |
          aws --version
          echo $AWS_STACK_REGION
          echo $CONTAINER_NAME
          aws ecr get-login-password --region ${AWS_STACK_REGION}| docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_STACK_REGION}.amazonaws.com
          
          IMAGE_TAG=$COMMIT_HASH:







